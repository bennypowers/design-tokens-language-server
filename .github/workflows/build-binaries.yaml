name: Build Binaries
on:
  workflow_call:
    inputs:
      release-tag:
        description: 'Release tag to upload binaries to (optional - if empty, just builds for validation)'
        required: false
        type: string
        default: ''

jobs:
  build-linux:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install cross-compilation toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build Linux binaries
        run: |
          make linux-x64
          make linux-arm64

      - name: List built binaries
        run: ls -lh dist/bin/

      - name: Upload binaries to release
        if: ${{ inputs.release-tag != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ inputs.release-tag }} \
            dist/bin/design-tokens-language-server-x86_64-unknown-linux-gnu \
            dist/bin/design-tokens-language-server-aarch64-unknown-linux-gnu

  build-windows:
    name: Build Windows Binaries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install Podman
        run: sudo apt-get update && sudo apt-get install -y podman

      - name: Build Windows binaries
        run: make windows-x64

      - name: List built binaries
        run: ls -lh dist/bin/

      - name: Upload binaries to release
        if: ${{ inputs.release-tag != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ inputs.release-tag }} \
            dist/bin/design-tokens-language-server-win-x64.exe

  build-macos:
    name: Build macOS Binaries
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Build macOS binaries
        run: |
          make darwin-x64
          make darwin-arm64

      - name: List built binaries
        run: ls -lh dist/bin/

      - name: Upload binaries to release
        if: ${{ inputs.release-tag != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ inputs.release-tag }} \
            dist/bin/design-tokens-language-server-x86_64-apple-darwin \
            dist/bin/design-tokens-language-server-aarch64-apple-darwin
