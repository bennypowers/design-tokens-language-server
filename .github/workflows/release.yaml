name: Release
on:
  release:
    types:
      - published

jobs:
  build-binaries:
    name: Build & Upload Binaries
    uses: ./.github/workflows/build-binaries.yaml
    with:
      release-tag: ${{ github.event.release.tag_name }}

  build-vscode:
    name: Build VSCode Extension
    runs-on: ubuntu-latest
    needs: [build-binaries]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download binaries from release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p extensions/vscode/dist/bin
          gh release download ${{ github.event.release.tag_name }} \
            --pattern "design-tokens-language-server-*" \
            --dir extensions/vscode/dist/bin

      - name: List downloaded binaries
        run: ls -lh extensions/vscode/dist/bin/

      - name: Build VSCode extension
        working-directory: extensions/vscode
        run: |
          npm install
          node build.js
          npm run build

      - name: Upload VSCode extension to release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload ${{ github.event.release.tag_name }} \
            extensions/vscode/*.vsix

  publish-vscode:
    name: Publish to VSCode Marketplace
    runs-on: ubuntu-latest
    needs: [build-vscode]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Download VSCode extension from release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release download ${{ github.event.release.tag_name }} \
            --pattern "*.vsix" \
            --dir .

      - name: Publish to VSCode Marketplace
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          npx @vscode/vsce publish --packagePath *.vsix

  publish-zed:
    name: Publish to Zed Extensions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get extension version
        id: version
        run: |
          VERSION=$(grep '^version = ' extensions/zed/extension.toml | cut -d'"' -f2)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extension version: $VERSION"

      - name: Clone zed-extensions fork
        run: |
          git clone https://github.com/bennypowers/zed-extensions.git
          cd zed-extensions
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Update submodule to latest commit
          cd zed-extensions/extensions/design-tokens
          git fetch origin
          git checkout ${{ github.sha }}
          cd ../..
          # Update version in extensions.toml
          sed -i "s/^version = \".*\"/version = \"${{ steps.version.outputs.version }}\"/" extensions.toml
          git add extensions/design-tokens extensions.toml

      - name: Create PR
        run: |
          cd zed-extensions

          BRANCH="update-design-tokens-${{ steps.version.outputs.version }}"
          git checkout -b "$BRANCH"
          git commit -m "Update design-tokens to v${{ steps.version.outputs.version }}"
          git push -u origin "$BRANCH"
          gh pr create \
            --repo zed-industries/extensions \
            --title "Update design-tokens to v${{ steps.version.outputs.version }}" \
            --body "Updates design-tokens extension to version ${{ steps.version.outputs.version }}.\n\nRelease notes: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version.outputs.version }}"
